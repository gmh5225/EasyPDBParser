# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.15)

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

# Regenerate CMakeLists.txt automatically in the root project
set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr
	include(cmkr.cmake OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)
endif()

# Create a configure-time dependency on cmake.toml to improve IDE support
if(CMKR_ROOT_PROJECT)
	configure_file(cmake.toml cmake.toml COPYONLY)
endif()

project(EasyPDBParser)

# raw_pdb
set(CMKR_CMAKE_FOLDER ${CMAKE_FOLDER})
if(CMAKE_FOLDER)
	set(CMAKE_FOLDER "${CMAKE_FOLDER}/raw_pdb")
else()
	set(CMAKE_FOLDER raw_pdb)
endif()
add_subdirectory(raw_pdb)
set(CMAKE_FOLDER ${CMKR_CMAKE_FOLDER})

# Target EasyPDBParserLib
set(CMKR_TARGET EasyPDBParserLib)
set(EasyPDBParserLib_SOURCES "")

list(APPEND EasyPDBParserLib_SOURCES
	"src/EasyPDBParserLib.cpp"
	"raw_pdb/src/Examples/ExampleContributions.cpp"
	"raw_pdb/src/Examples/ExampleFunctionSymbols.cpp"
	"raw_pdb/src/Examples/ExampleMain.cpp"
	"raw_pdb/src/Examples/ExampleMemoryMappedFile.cpp"
	"raw_pdb/src/Examples/ExampleSymbols.cpp"
	"raw_pdb/src/Examples/ExampleTimedScope.cpp"
	"raw_pdb/src/Examples/Examples_PCH.cpp"
	"raw_pdb/src/Examples/ExampleMemoryMappedFile.h"
	"raw_pdb/src/Examples/ExampleTimedScope.h"
	"raw_pdb/src/Examples/Examples_PCH.h"
	"include/EasyPDBParserLib.h"
)

list(APPEND EasyPDBParserLib_SOURCES
	cmake.toml
)

set(CMKR_SOURCES ${EasyPDBParserLib_SOURCES})
add_library(EasyPDBParserLib)

if(EasyPDBParserLib_SOURCES)
	target_sources(EasyPDBParserLib PRIVATE ${EasyPDBParserLib_SOURCES})
endif()

source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${EasyPDBParserLib_SOURCES})

target_compile_features(EasyPDBParserLib PUBLIC
	cxx_std_20
)

target_include_directories(EasyPDBParserLib PUBLIC
	include
)

target_link_libraries(EasyPDBParserLib PUBLIC
	raw_pdb
)

unset(CMKR_TARGET)
unset(CMKR_SOURCES)

